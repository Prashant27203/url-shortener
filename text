import React, { useState } from "react";
import axios from "axios";

const App = () => {
  const [originalUrl, setOriginalUrl] = useState("");
  const [shortUrl, setShortUrl] = useState("");
  const [error, setError] = useState("");

  const handleSubmit = async () => {
    if (!originalUrl) {
      setError("Please enter a valid URL.");
      return;
    }

    try {
      const res = await axios.post("http://localhost:3000/api/short", {
        originalUrl,
      });
      setShortUrl(res.data.shortId);
      setError("");
    } catch (err) {
      console.log(err);
      setError("Failed to shorten the URL. Please try again.");
    }
  };

  return (
    <div style={styles.container}>
      <h1 style={styles.header}>URL Shortener</h1>

      <div style={styles.form}>
        <input
          type="text"
          value={originalUrl}
          onChange={(e) => setOriginalUrl(e.target.value)}
          placeholder="Enter your URL"
          style={styles.input}
        />
        <button onClick={handleSubmit} style={styles.button}>
          Shorten
        </button>
      </div>

      {error && <p style={styles.error}>{error}</p>}

      {shortUrl && (
        <div style={styles.result}>
          <p>Shortened URL:</p>
          <a
            href={`http://localhost:3000/${shortUrl}`}
            target="_blank"
            rel="noopener noreferrer"
          >
            {`http://localhost:3000/${shortUrl}`}
          </a>
        </div>
      )}
    </div>
  );
};

const styles = {
  container: {
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center",
    height: "100vh",
    backgroundColor: "#f5f5f5",
    fontFamily: "Arial, sans-serif",
  },
  header: {
    fontSize: "36px",
    color: "#333",
    marginBottom: "20px",
  },
  form: {
    display: "flex",
    flexDirection: "row",
    marginBottom: "20px",
  },
  input: {
    width: "300px",
    padding: "10px",
    fontSize: "16px",
    borderRadius: "5px",
    border: "1px solid #ccc",
    marginRight: "10px",
  },
  button: {
    padding: "10px 20px",
    fontSize: "16px",
    backgroundColor: "#007bff",
    color: "#fff",
    border: "none",
    borderRadius: "5px",
    cursor: "pointer",
  },
  error: {
    color: "red",
    marginTop: "10px",
  },
  result: {
    marginTop: "20px",
    textAlign: "center",
  },
};

export default App;
